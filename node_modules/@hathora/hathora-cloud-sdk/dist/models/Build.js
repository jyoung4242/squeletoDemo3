"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Hathora Cloud API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuildToJSON = exports.BuildFromJSONTyped = exports.BuildFromJSON = exports.instanceOfBuild = exports.BuildStatusEnum = void 0;
const BuildRegionalContainerTagsInner_1 = require("./BuildRegionalContainerTagsInner");
/**
 * @export
 */
exports.BuildStatusEnum = {
    Created: 'created',
    Running: 'running',
    Succeeded: 'succeeded',
    Failed: 'failed'
};
/**
 * Check if a given object implements the Build interface.
 */
function instanceOfBuild(value) {
    let isInstance = true;
    isInstance = isInstance && "regionalContainerTags" in value;
    isInstance = isInstance && "imageSize" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "deletedAt" in value;
    isInstance = isInstance && "finishedAt" in value;
    isInstance = isInstance && "startedAt" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "buildId" in value;
    isInstance = isInstance && "appId" in value;
    return isInstance;
}
exports.instanceOfBuild = instanceOfBuild;
function BuildFromJSON(json) {
    return BuildFromJSONTyped(json, false);
}
exports.BuildFromJSON = BuildFromJSON;
function BuildFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'regionalContainerTags': (json['regionalContainerTags'].map(BuildRegionalContainerTagsInner_1.BuildRegionalContainerTagsInnerFromJSON)),
        'imageSize': json['imageSize'],
        'status': json['status'],
        'deletedAt': (json['deletedAt'] === null ? null : new Date(json['deletedAt'])),
        'finishedAt': (json['finishedAt'] === null ? null : new Date(json['finishedAt'])),
        'startedAt': (json['startedAt'] === null ? null : new Date(json['startedAt'])),
        'createdAt': (new Date(json['createdAt'])),
        'createdBy': json['createdBy'],
        'buildId': json['buildId'],
        'appId': json['appId'],
    };
}
exports.BuildFromJSONTyped = BuildFromJSONTyped;
function BuildToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'regionalContainerTags': (value.regionalContainerTags.map(BuildRegionalContainerTagsInner_1.BuildRegionalContainerTagsInnerToJSON)),
        'imageSize': value.imageSize,
        'status': value.status,
        'deletedAt': (value.deletedAt === null ? null : value.deletedAt.toISOString()),
        'finishedAt': (value.finishedAt === null ? null : value.finishedAt.toISOString()),
        'startedAt': (value.startedAt === null ? null : value.startedAt.toISOString()),
        'createdAt': (value.createdAt.toISOString()),
        'createdBy': value.createdBy,
        'buildId': value.buildId,
        'appId': value.appId,
    };
}
exports.BuildToJSON = BuildToJSON;
