"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Hathora Cloud API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeploymentToJSON = exports.DeploymentFromJSONTyped = exports.DeploymentFromJSON = exports.instanceOfDeployment = void 0;
const DeploymentConfigEnvInner_1 = require("./DeploymentConfigEnvInner");
const PlanName_1 = require("./PlanName");
const TransportType_1 = require("./TransportType");
/**
 * Check if a given object implements the Deployment interface.
 */
function instanceOfDeployment(value) {
    let isInstance = true;
    isInstance = isInstance && "env" in value;
    isInstance = isInstance && "roomsPerProcess" in value;
    isInstance = isInstance && "planName" in value;
    isInstance = isInstance && "transportType" in value;
    isInstance = isInstance && "containerPort" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "requestedMemoryMB" in value;
    isInstance = isInstance && "requestedCPU" in value;
    isInstance = isInstance && "deploymentId" in value;
    isInstance = isInstance && "buildId" in value;
    isInstance = isInstance && "appId" in value;
    return isInstance;
}
exports.instanceOfDeployment = instanceOfDeployment;
function DeploymentFromJSON(json) {
    return DeploymentFromJSONTyped(json, false);
}
exports.DeploymentFromJSON = DeploymentFromJSON;
function DeploymentFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'env': (json['env'].map(DeploymentConfigEnvInner_1.DeploymentConfigEnvInnerFromJSON)),
        'roomsPerProcess': json['roomsPerProcess'],
        'planName': (0, PlanName_1.PlanNameFromJSON)(json['planName']),
        'transportType': (0, TransportType_1.TransportTypeFromJSON)(json['transportType']),
        'containerPort': json['containerPort'],
        'createdAt': (new Date(json['createdAt'])),
        'createdBy': json['createdBy'],
        'requestedMemoryMB': json['requestedMemoryMB'],
        'requestedCPU': json['requestedCPU'],
        'deploymentId': json['deploymentId'],
        'buildId': json['buildId'],
        'appId': json['appId'],
    };
}
exports.DeploymentFromJSONTyped = DeploymentFromJSONTyped;
function DeploymentToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'env': (value.env.map(DeploymentConfigEnvInner_1.DeploymentConfigEnvInnerToJSON)),
        'roomsPerProcess': value.roomsPerProcess,
        'planName': (0, PlanName_1.PlanNameToJSON)(value.planName),
        'transportType': (0, TransportType_1.TransportTypeToJSON)(value.transportType),
        'containerPort': value.containerPort,
        'createdAt': (value.createdAt.toISOString()),
        'createdBy': value.createdBy,
        'requestedMemoryMB': value.requestedMemoryMB,
        'requestedCPU': value.requestedCPU,
        'deploymentId': value.deploymentId,
        'buildId': value.buildId,
        'appId': value.appId,
    };
}
exports.DeploymentToJSON = DeploymentToJSON;
