"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Hathora Cloud API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthV1Api = void 0;
const runtime = require("../runtime");
const models_1 = require("../models");
/**
 *
 */
class AuthV1Api extends runtime.BaseAPI {
    /**
     */
    loginAnonymousRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.appId === null || requestParameters.appId === undefined) {
                throw new runtime.RequiredError('appId', 'Required parameter requestParameters.appId was null or undefined when calling loginAnonymous.');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/auth/v1/{appId}/login/anonymous`.replace(`{${"appId"}}`, encodeURIComponent(String(requestParameters.appId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.LoginAnonymous200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    loginAnonymous(appId, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.loginAnonymousRaw({ appId: appId }, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    loginGoogleRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.appId === null || requestParameters.appId === undefined) {
                throw new runtime.RequiredError('appId', 'Required parameter requestParameters.appId was null or undefined when calling loginGoogle.');
            }
            if (requestParameters.loginGoogleRequest === null || requestParameters.loginGoogleRequest === undefined) {
                throw new runtime.RequiredError('loginGoogleRequest', 'Required parameter requestParameters.loginGoogleRequest was null or undefined when calling loginGoogle.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/auth/v1/{appId}/login/google`.replace(`{${"appId"}}`, encodeURIComponent(String(requestParameters.appId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, models_1.LoginGoogleRequestToJSON)(requestParameters.loginGoogleRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.LoginAnonymous200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    loginGoogle(appId, loginGoogleRequest, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.loginGoogleRaw({ appId: appId, loginGoogleRequest: loginGoogleRequest }, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    loginNicknameRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.appId === null || requestParameters.appId === undefined) {
                throw new runtime.RequiredError('appId', 'Required parameter requestParameters.appId was null or undefined when calling loginNickname.');
            }
            if (requestParameters.loginNicknameRequest === null || requestParameters.loginNicknameRequest === undefined) {
                throw new runtime.RequiredError('loginNicknameRequest', 'Required parameter requestParameters.loginNicknameRequest was null or undefined when calling loginNickname.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            const response = yield this.request({
                path: `/auth/v1/{appId}/login/nickname`.replace(`{${"appId"}}`, encodeURIComponent(String(requestParameters.appId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, models_1.LoginNicknameRequestToJSON)(requestParameters.loginNicknameRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, models_1.LoginAnonymous200ResponseFromJSON)(jsonValue));
        });
    }
    /**
     */
    loginNickname(appId, loginNicknameRequest, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.loginNicknameRaw({ appId: appId, loginNicknameRequest: loginNicknameRequest }, initOverrides);
            return yield response.value();
        });
    }
}
exports.AuthV1Api = AuthV1Api;
