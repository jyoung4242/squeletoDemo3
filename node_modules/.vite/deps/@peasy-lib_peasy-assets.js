import "./chunk-2B2CG5KL.js";

// node_modules/@peasy-lib/peasy-assets/dist/esm/index.mjs
var Assets = class _Assets {
  static get pending() {
    return this.requested - this.loaded;
  }
  static initialize(s = {}) {
    _Assets.initialized = true;
    if (s.src != null)
      _Assets.sources.default = s.src;
  }
  static load(s) {
    return Promise.all(s.map(async (s2) => {
      if (typeof s2 === "string")
        s2 = {
          src: s2
        };
      const t = `${_Assets.sources.default}${s2.src ?? ""}`;
      const e = s2.family != null ? "font" : _Assets.types[s2.type ?? t.split(".").pop() ?? ""];
      const i = _Assets.loaders[e];
      if (i == null)
        return null;
      let a = s2.name;
      if (a == null)
        if (e === "font")
          a = s2.family;
        else {
          a = t.split("/").pop() ?? "";
          const s3 = a.split(".");
          s3.pop();
          a = s3.join(".");
        }
      _Assets.requested++;
      const n = i(t, s2);
      _Assets.assets[e][a] = await n;
      _Assets.loaded++;
      return n;
    }));
  }
  static clear() {
    _Assets.assets = {
      image: {},
      audio: {},
      font: {}
    };
    _Assets.requested = 0;
    _Assets.loaded = 0;
    return Promise.resolve();
  }
  static image(s) {
    return _Assets.assets.image[s];
  }
  static audio(s) {
    return _Assets.assets.audio[s];
  }
  static font(s) {
    return _Assets.assets.font[s];
  }
  static loadImage(s) {
    return new Promise(async (t) => {
      const e = new Image();
      e.onprogress = (...s2) => console.log("progress", s2);
      e.onload = () => t(e);
      e.src = await fetch(s).then((s2) => s2.url);
    });
  }
  static loadAudio(s) {
    return new Promise((t) => {
      const e = new Audio();
      e.addEventListener("progress", (...s2) => console.log("progress", s2));
      e.oncanplaythrough = () => t(e);
      e.src = s;
    });
  }
  static loadFont(s, t) {
    if (!s.startsWith("url("))
      s = `url(${s})`;
    return new Promise(async (e) => {
      const i = new FontFace(t.family, s, t.descriptors ?? {});
      await i.load();
      document.fonts.add(i);
      e(i);
    });
  }
};
Assets.initialized = false;
Assets.sources = {
  default: "/assets/"
};
Assets.assets = {
  image: {},
  audio: {},
  font: {}
};
Assets.requested = 0;
Assets.loaded = 0;
Assets.types = {
  image: "image",
  audio: "audio",
  png: "image",
  svg: "image",
  jpg: "image",
  jpeg: "image",
  gif: "image",
  mp3: "audio",
  wav: "audio"
};
Assets.loaders = {
  image: Assets.loadImage,
  audio: Assets.loadAudio,
  font: Assets.loadFont
};
export {
  Assets
};
//# sourceMappingURL=@peasy-lib_peasy-assets.js.map
